
mkContainers:"<div id=\"rootWrapper\"><div id=\"contentIndex\"><div id=\"indexContainer\">",
            "<img src=\"https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png\" width=\"50\" height=\"50\">",
            "<div class=\"accordion-menu example\">%</div></div></div>",
            "<div id=\"contentContainer\"><div id=\"contentHeader\">",
            "<h1>The Platform documentation</h1>",
            "<div id=\"searchWrapper\"><div id=\"searchField\"><input type=\"text\"/></div>",
            "<b>&#9906;</b>",
            "</div></div>",
            "<div id=\"content\">%",
            "<div id=\"footer\">",
            "<footer>",
            "<p>Made with ❤ to O language</p>",
            "<p>© 2020 ThePlatform</p>",
            "</span></footer>",
            "</div></div></div></div>";

.http.const.temp: "<!doctype html>\r\n",
            "<html>\r\n",
            "<head>\r\n",
            "<link rel=\"stylesheet\" href=\"/styles.css\">",
            "<link rel=\"stylesheet\" href=\"/prism.css\">",
            "<script src=\"/scripts.js\"></script>",
            "<script src=\"/prism.js\"></script>",
            "<title>%</title>\r\n",
            "</head>\r\n",
            "<body>\r\n",
            "%\r\n",
            "</body>\r\n",
            "</html>";

mkindx: {[mdpath]
    println["building: %";mdpath];
    cont: .md.pars "c"$read[`$":",mdpath];
    body: .md.ht.build[cont];
    html: format[.http.const.temp;"index";format[mkContainers;body;""]];
    (body;+`document`content!(`$"index.html";html))
};

mkone: {[mdpath;indx]
    println["building: %";mdpath];
    cont: .md.pars "c"$read[`$":",mdpath];
    body: .md.ht.build[cont];
    stem: *"\\." vs last "/" vs mdpath;
    html: format[.http.const.temp;stem;format[mkContainers;indx;body]];
    outp: ssr[ssr[mdpath;"source/";""];"md";"html"];
    +`document`content!(`$outp;html)
};

// get full list of md files
mdfiles: {[dir]
    l:os["dir";dir];
    m:l where {(x[1]~"file")&("md"~last "\\." vs x[3])}'l;
    d:l where {x[1]~"dir"}'l;
    f:3(~[@])'m;
    f,,/o'[3(~[@])'d]
};

mkassets: {
    css:      "c"$read `:assets/styles.css;
    js:       "c"$read `:assets/scripts.js;
    prismjs:  "c"$read `:assets/prism.js;
    prismcss: "c"$read `:assets/prism.css;
    favicon:  "c"$read `:assets/favicon.ico;
    +`document`content!((`$"styles.css";`$"scripts.js";
                         `$"favicon.ico";`$"prism.css";
                         `$"prism.js");
                         (css;js;favicon;prismcss;prismjs))
};

mkbook: {
    (indx;content):mkindx["source/SUMMARY.md"];
    .book:: content;
    {[file]
        built: .[mkone;(file;indx);{println["-- UNABLE TO BUILD: %";file]}];
        $[null built;();.book,:built];
    }'mdfiles["source/"];
    .book,mkassets[]
};


.md.li: "<li>%</li>";
// ,
//         "<label class=\"md-nav__link\" for=\"nav-10-2\">",
//         "%",
//         "<span class=\"md-nav__icon md-icon\">",
//         "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">",
//         "<path d=\"M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z\" /></svg>",
//         "</span></label>",
//         "</li>";

.md.ht.list: {[rows]
    .ind:: 0;
    val: ,/
    {[row]
        (ind;val): row;
        if [ind=.ind] {
            format[.md.li;,/.md.ht.build[,val]]
        } elif [ind>.ind] {
            ul: ,/{"<ul>"}'!ind - .ind;
            .ind:: ind;
            format["%",.md.li;ul;,/.md.ht.build[,val]]
        } else {
            ul: ,/{"</ul>"}'!.ind - ind;
            .ind:: ind;
            format["%",.md.li;ul;,/.md.ht.build[,val]]
        }
    }'rows;
    $[0<.ind;format["%%";val;,/{"</ul>"}'!.ind];val]
};