//Example how to check:
//export OHOME=~/RustProjects/kernel/
//OLOG=debug rlwrap $OHOME/target/debug/tachyon -c 4 -f $OHOME/repl chckcode

\c 120 43;
(.env0;.env1;.env2):{$[120<#x;("c"$120#"i"$x),"..";x]}'format["%";value `],2#"\n" vs format["%";key `.];
start:ts[];

mdfiles: {[dir]
    l:os["dir";dir];
    m:({(`file=`$x[1])&("md"~last "\\." vs x[3])}'l)#l;
        d:({`dir=`$x[1]}'l)#l;
    f:3(~[@])'m;
    f,,/o'[3(~[@])'d]
};

patch: {
        s:ssr[x;"Reagent#\\d+";{a:"#" vs x; a[0],"#",$("J"$a[1])-9}];
        s:ssr[s;"id +\\| \\d+";{a:"\\| " vs x; a[0],"| ",$("J"$a[1])-9}];
        s:ssr[s;"^myout *\\|.+";""];
        s:ssr[s;"^p +\\| \"22222\"";""];
        s:ssr[s;"^l +\\|.+";""];
        s:ssr[s;"macos";"linux"];
        s:ssr[s;"Darwin";"Linux"];
        s:ssr[s;"/zsh";"/bash"];
        s:ssr[s;"``myout`a";"``a"];
        s:ssr[s;".+\\[cli].+";""];
        s:ssr[s;"^ +\\|.+";.env0];
        s:ssr[s;"^o +\\|.+";.env1];
        s:ssr[s;"^repl *\\|.+";.env2];
        ssr[s;"^d +\\|.+";""]
};

bookdir:os "pwd";
lst:mdfiles[bookdir];
strip: {@[{p:*ss[|x;"[^ \n\t\r]"]; |"c"$p _"x"$|x};x;x]};
error: {format["** % error: `%`:\n%";x[`kind];x[`call];x[`message]]};
getres: {s:$[^x;"";x]; patch'"\n" vs "" sv "\x1b\\[91m" vs s};
getout: {s:$[^x;"";&[x like "^\"";x like "\"$";parse x;x]]; "\n" vs "" sv "\x1b\\[91m" vs s};
diff1:{[a;b] d:a diff b;if [d~()] {:d}; m:,/{xx:`int$x; &/{yy:`int$x; $[(#yy)=#xx;((1=#xx)&(~xx~yy))|(1<+/xx{x<>y}'yy);1b]}'b}'d;
       if [(@1b)=@m] {m:,m}; if [0=+/m] {:()}; d where ~^d where m};
.cnterr::0;

fnd_ocode: {[file]
    flag::0; .file:file;
    //if [~file like "display"] {:0}; //debug row
    files: "readln|plugin|usage|kill";
    .forshow: "show|deq|applicationexamples|ipc|tcp|overview";
    .shw: ("show";"deq";"applicationexamples";"ipc";"tcp";"overview")!(12;12;27;24;25;85);
    .fortimer: "deq|reagent|timer|assign0|load|std|^kdb|ipc";
    .tmr: +(("std";8 25 37 62);("deq";12);("reagent";11);("timer";13);("assign0";67 82);("load";11 13 26 36);
            ("kdb";6 12);("kdblistener";7);("ipc";12));
    .tmr: .tmr[0]!.tmr 1;
    .scrpt: +(("applicationexamples";5 7 14 21 27);("platformforpython";148 150);("react";,44);("kdblistener";7 10);
              ("tcp";14 25);("ws";,12);("listener";7 9);("ipc";12 24);("patterns";,21);("display";30 41));
    .scrpt: .scrpt[0]!.scrpt 1;

    f:"c"$read `$":",file;
    if [0<#f ss "\\r"] {sep:"\\r\\n"} else {sep:"\\n"};
    rows: sep vs f;
    {r:x;
     if ["```o"~x] {flag+:1} elif ["```"~x] {flag::0};
     if [x like "]\\("] {{nf: ("\\)" vs x)[0]; if [0=#(system format["head %";bookdir,"/source",nf])[1]]
        {if [not ("/nolink.md"~nf) | (nf like "https") | (flag>0)] 
            {println ""; println["\x1b[1;94;48mRef % in file % is bad.\x1b[0m";nf;.file]}}} each 1_ "]\\(" vs r;}
    }'rows;
    $[file like files;[println "\x1b[1;97;48m"; 0N!file," need check manualy."; print "\x1b[0m"; :0]; 0];
    idx: where {res:flag; if ["```o"~x] {flag+:1} elif ["```"~x] {$[flag>0;flag-:1;0]; res:flag}; "b"$res}'rows;
    idx: 1_("*";,*idx) {$[y=1+last last x; .[-1_x;();,;(last x),y]; .[x;();,;,y]]}/1_idx;
    //println["%";file]; //debug row
    &[(,,0N)~idx;:0;0]; //skip file without o code
    if [os["name"] like "macos"] {spawn {system "OLOG=debug ./tachyon -c 4 -f repl -- -p 22222 -d"}}
    else {spawn {system "OLOG=debug taskset --cpu-list 0,1,2,3 ./tachyon -c 4 -f repl -- -p 22222 -d"}};
    .cli: {x~0}{@[{sleep 100; reagent[`ipc;x]};"127.0.0.1:22222";[print "c";0]]}/0;
    .cli[`version!.repl.version]; .cli ".repl.ps1:{}; \\c 120 43;";
    .cli "myout:reagent[`async]; .o.out::myout; .o.err::myout;"; {~x~0}{@[{get[x;.cli]};100;0]}\1;
    .file:"c"$-3_"x"$last "/" vs file;
    {
        rr: {[s] ssr[ssr[s;"&lt";"<"];"&gt";">"]}'rows x;
        foreval: where {0x6f29~2#"x"$x}'rr;
        forscrp: 1b,1_{$[""~y;1b;0b]}':rr;
        evl: +(rr foreval; x foreval);
        if [~#foreval] {
                        d:(x where forscrp)!value (()!()) {if [_y] {x[#x]:(,*y);x} else {x[(#x)-1],:(,*y)}}/+(rr;forscrp);
                        intersect:(x where forscrp) sect .scrpt[.file];
                        evl:+(d[intersect];intersect);};
        if [0<#evl] {
          res: ,/{ numrow:_x;
                   s: if [(@*x)=(@"")] {*x} else {,/{("//" vs x)[0]}'*x};
                   .cli {&[.file like .forshow;numrow in .shw[.file];[print "s";"\\c 10000 43;",x];x]}[$[0x6f29~2#"x"$s;"c"$2_"x"$s;s]];
		   &[.file like .fortimer;numrow in .tmr[.file];[print "t"; sleep 5000];0];
		   sleep[50];
		   calc: getres @[{get[x;.cli]};100;error];
                   .cli ".l:1_-1_{~x~0}{@[{get[x;myout]};50;0]}\\1; $[0=#.l;0N0;1=#.l; *.l;\"\n\" sv .l]";
                   out: @[{get[x;.cli]};100;""];
                   &[.file like .forshow;numrow in .shw[.file];[.cli "\\c 120 43;"; get[100;.cli];];0];
                   if [(@*x)=(@"")] {(,*x),(getout out),calc} else {(*x),(getout out),calc}
		   }'evl;
          rr: strip'rr where ~""~/:rr;
          res: strip'res where ~""~/:res;
          //if [.file like "display"] {show evl; show .file; show res}; //debug row
          if [~diff1[rr;res]~diff1[res;rr]] {println ""; show file, ": ", format["%..%";*x;_x];
                        .cnterr+:1; println["Error count: %";.cnterr];
        		//show rr; println ""; //debug row
        		//show res; println ""; //debug row
                        show diff1[rr;res]; 0N!"==Expected=="; show diff1[res;rr]; 0N!"==Got=="; println[""];} else {print "+";};
           }
        else {show "! ignored !"; show rr; show *x; show .file};
    }'idx;
    @[{.cli x};"kill[*top[]`handle;0]";0];
    .cli: 0;
};
if [(`year$ts[])<>"I"$"c"$4#"x"$("© " vs "c"$read `:build.o)[1]] {println "\x1b[1;97;48mWrong © year.\x1b[0m"};
os["cd";getenv[`OHOME]];
system["cp -f ",argv[`__bin__]," tachyon"];
if [~"./tachyon" in (+os["dir"])[3]] {println ["\x1b[91m tachyon absent in % dir.\x1b[0m";getenv[`OHOME]]; kill 0};
if [~"./std/repl.o" in (+os["dir";"./std/"])[3]] {println ["\x1b[91m repl.o absent in %/std/ dir.\x1b[0m";getenv[`OHOME]]; kill 0};
system "rm -fr /tmp/* ./tmp/ f.txt";
{fnd_ocode[x]}'lst;
system "rm -fr /tmp/* ./tmp/ f.txt";
println["\nChecking complete in %";"t"$"p"$ts[]-start];
